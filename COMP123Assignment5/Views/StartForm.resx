<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>